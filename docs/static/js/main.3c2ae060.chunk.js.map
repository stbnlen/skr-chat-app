{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","src","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","alt","App","useAuthState","user","ReactDOM","render","document","getElementById"],"mappings":"8PAWAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAqB3B,SAASC,IAOP,OACE,qCAGE,sBAAKC,UAAU,aAAaC,QATP,WACvB,IAAMC,EAAW,IAAId,IAASS,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAOnB,UACE,qBAAKF,UAAU,sBAAf,SACE,qBAAKA,UAAU,cAAcK,IAAI,kFAEnC,mBAAGL,UAAU,WAAb,SAAwB,yDAG1B,mBAAGA,UAAU,YAAb,0BAON,SAASM,IACP,OAAOT,EAAKU,aACV,wBAAQP,UAAU,WAAWC,QAAS,kBAAMJ,EAAKW,WAAjD,sBAKJ,SAASC,IACP,IAAMC,EAAQC,mBACRC,EAAcd,EAAUe,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAErD,EAAmBC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAAP,oBAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGMC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ7B,EAAKU,YAAvBoB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAW3C,IAASU,UAAUkC,WAAWC,kBACzCN,MACAC,aATgB,OAYlBN,EAAa,IACbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAbvB,2CAAH,sDAgBjB,OAAQ,qCACN,iCAEGjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEvD,sBAAMC,IAAKhC,OAIb,uBAAMiC,SAAUpB,EAAhB,UAEE,uBAAOqB,MAAOvB,EAAWwB,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,QAAQG,YAAY,uBAEpF,wBAAQC,KAAK,SAASC,UAAW5B,EAAjC,sCAQN,SAASkB,EAAYW,GACnB,MAAgCA,EAAMV,QAA9BV,EAAR,EAAQA,KAAMH,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,SAEbuB,EAAexB,IAAQ9B,EAAKU,YAAYoB,IAAM,OAAS,WAE7D,OAAQ,mCACN,sBAAK3B,UAAS,kBAAamD,GAA3B,UACE,qBAAK9C,IAAKuB,GAAY,wDAAyDwB,IAAI,SACnF,4BAAItB,SAMKuB,MAhHf,WACE,MAAeC,YAAazD,GAArB0D,EAAP,oBAEA,OACE,sBAAKvD,UAAU,MAAf,UACE,mCACE,sEACA,cAACM,EAAD,OAGF,kCACGiD,EAAO,cAAC9C,EAAD,IAAe,cAACV,EAAD,UC/B/ByD,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3c2ae060.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDmeSkx18XppldBSgxUp3MKNfWjsg8uQ0E\",\n  authDomain: \"super-chat-68020.firebaseapp.com\",\n  projectId: \"super-chat-68020\",\n  storageBucket: \"super-chat-68020.appspot.com\",\n  messagingSenderId: \"584067299747\",\n  appId: \"1:584067299747:web:7b45e85a7f338890a94216\",\n  measurementId: \"G-1JJTKY4JS3\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>‚öõÔ∏èüî•üí¨</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      {/* <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button> */}\n\n      <div className=\"google-btn\" onClick={signInWithGoogle}>\n        <div className=\"google-icon-wrapper\">\n          <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"/>\n        </div>\n        <p className=\"btn-text\"><b>Sign in with google</b></p>\n      </div>\n\n      <p className=\"ban_avise\">Wena Seba</p>\n    </>\n  )\n\n}\n\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n      <button type=\"submit\" disabled={!formValue}>üïäÔ∏è</button>\n\n    </form>\n  </>)\n}\n\n\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt=\"user\"/>\n      <p>{text}</p>\n    </div>\n  </>)\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}